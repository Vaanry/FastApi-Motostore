"""Del userpromo

Revision ID: 2071b4d55159
Revises: 3637cd9a8021
Create Date: 2024-12-02 12:16:26.368207

"""

from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "2071b4d55159"
down_revision: Union[str, None] = "3637cd9a8021"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index("ix_userspromo_id", table_name="userspromo")
    op.drop_table("userspromo")
    op.alter_column(
        "orders",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "payment",
        "timestamp",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "users",
        "reg_date",
        existing_type=postgresql.TIMESTAMP(timezone=True),
        type_=sa.DateTime(),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        "users",
        "reg_date",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "payment",
        "timestamp",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.alter_column(
        "orders",
        "timestamp",
        existing_type=sa.DateTime(),
        type_=postgresql.TIMESTAMP(timezone=True),
        existing_nullable=True,
        existing_server_default=sa.text("now()"),
    )
    op.create_table(
        "userspromo",
        sa.Column("tg_id", sa.BIGINT(), autoincrement=False, nullable=False),
        sa.Column(
            "promo_id", sa.INTEGER(), autoincrement=False, nullable=False
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.ForeignKeyConstraint(
            ["promo_id"],
            ["promo.id"],
            name="userspromo_promo_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["tg_id"],
            ["users.tg_id"],
            name="userspromo_tg_id_fkey",
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint("id", name="userspromo_pkey"),
        sa.UniqueConstraint(
            "tg_id", "promo_id", name="userspromo_tg_id_promo_id_key"
        ),
    )
    op.create_index("ix_userspromo_id", "userspromo", ["id"], unique=False)
    # ### end Alembic commands ###
