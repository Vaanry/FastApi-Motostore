"""Create db

Revision ID: f89c65879b20
Revises: 
Create Date: 2024-11-19 21:32:02.739898

"""

import sqlalchemy as sa
from alembic import op

# revision identifiers, used by Alembic.
revision = "f89c65879b20"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "manufacturer",
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("country", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name"),
    )
    op.create_index(
        op.f("ix_manufacturer_id"), "manufacturer", ["id"], unique=False
    )
    op.create_table(
        "promo",
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("is_promo", sa.Boolean(), nullable=True),
        sa.Column("file", sa.String(), nullable=True),
        sa.Column("downloads", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_promo_id"), "promo", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column(
            "reg_date",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("tg_id", sa.BigInteger(), nullable=True),
        sa.Column("username", sa.String(), nullable=True),
        sa.Column("language", sa.String(), nullable=True),
        sa.Column("balance", sa.Float(), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=True),
        sa.Column("source", sa.String(), nullable=True),
        sa.Column("active", sa.Boolean(), nullable=True),
        sa.Column("block_bot", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tg_id"),
        sa.UniqueConstraint("username"),
    )
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "catalog",
        sa.Column("manufacturer", sa.String(), nullable=True),
        sa.Column("type", sa.String(), nullable=True),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("price", sa.Float(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("sort_type", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["manufacturer"], ["manufacturer.name"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("model"),
        sa.UniqueConstraint("type"),
    )
    op.create_index(op.f("ix_catalog_id"), "catalog", ["id"], unique=False)
    op.create_table(
        "logs",
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("tg_id", sa.BigInteger(), nullable=True),
        sa.Column("button", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_logs_id"), "logs", ["id"], unique=False)
    op.create_table(
        "payment",
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("tg_id", sa.BigInteger(), nullable=True),
        sa.Column("amount", sa.Float(), nullable=True),
        sa.Column("uuid", sa.String(), nullable=True),
        sa.Column("confirmed", sa.Boolean(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_payment_id"), "payment", ["id"], unique=False)
    op.create_table(
        "userspromo",
        sa.Column("tg_id", sa.BigInteger(), nullable=False),
        sa.Column("promo_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["promo_id"], ["promo.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("tg_id", "promo_id"),
    )
    op.create_index(
        op.f("ix_userspromo_id"), "userspromo", ["id"], unique=False
    )
    op.create_table(
        "items",
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("cc", sa.Integer(), nullable=True),
        sa.Column("horsepower", sa.Integer(), nullable=True),
        sa.Column("age", sa.String(), nullable=True),
        sa.Column("row", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model"],
            ["catalog.model"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("row"),
    )
    op.create_index(op.f("ix_items_id"), "items", ["id"], unique=False)
    op.create_table(
        "orders",
        sa.Column(
            "timestamp",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("tg_id", sa.BigInteger(), nullable=True),
        sa.Column("quantity", sa.Integer(), nullable=True),
        sa.Column("model", sa.String(), nullable=True),
        sa.Column("cc", sa.Integer(), nullable=True),
        sa.Column("horsepower", sa.Integer(), nullable=True),
        sa.Column("age", sa.String(), nullable=True),
        sa.Column("purchase", sa.Float(), nullable=True),
        sa.Column("is_paid", sa.Boolean(), nullable=True),
        sa.Column("order_archive", sa.String(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["model"], ["catalog.model"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["tg_id"], ["users.tg_id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_orders_id"), "orders", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_orders_id"), table_name="orders")
    op.drop_table("orders")
    op.drop_index(op.f("ix_items_id"), table_name="items")
    op.drop_table("items")
    op.drop_index(op.f("ix_userspromo_id"), table_name="userspromo")
    op.drop_table("userspromo")
    op.drop_index(op.f("ix_payment_id"), table_name="payment")
    op.drop_table("payment")
    op.drop_index(op.f("ix_logs_id"), table_name="logs")
    op.drop_table("logs")
    op.drop_index(op.f("ix_catalog_id"), table_name="catalog")
    op.drop_table("catalog")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_promo_id"), table_name="promo")
    op.drop_table("promo")
    op.drop_index(op.f("ix_manufacturer_id"), table_name="manufacturer")
    op.drop_table("manufacturer")
    # ### end Alembic commands ###
